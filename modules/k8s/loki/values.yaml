global:
  cloudProvider: ""
  providerConfigRefName: ""
  bucketName: "loki"
  prefix: ""

loki:
  fullnameOverride: loki
  serviceAccount:
    create: false
    name: loki

  loki:
    auth_enabled: false
    limits_config:
      allow_structured_metadata: false # Set to false if schema v12 is used.
    storage:
      bucketNames:
        chunks: ""
        ruler: ""
        admin: ""
      storage_config:
        boltdb_shipper:
          active_index_directory: /var/loki/boltdb-shipper-active
          cache_location: /var/loki/boltdb-shipper-cache
          cache_ttl: 24h
        tsdb_shipper:
          active_index_directory: /var/loki/tsdb-index
          cache_location: /var/loki/tsdb-cache
          cache_ttl: 24h

  resultsCache:
    enabled: false
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 90
            preference:
              matchExpressions:
                - key: mon
                  operator: In
                  values:
                    - "true"
          - weight: 10
            preference:
              matchExpressions:
                - key: tools
                  operator: In
                  values:
                    - "true"

  chunksCache:
    enabled: false

  test:
    enabled: false

  networkPolicy:
    enabled: true
  ruler:
    enabled: false

    # Recording rules for monitoring Loki, required for some dashboards
    rules:
      # -- If enabled, create PrometheusRule resource with Loki recording rules
      enabled: true
      # -- Include alerting rules
      alerting: true
      # -- Alternative namespace to create PrometheusRule resources in
      namespace: monitoring
      additionalGroups: []
      # - name: additional-loki-rules
      #   rules:
      #     - record: job:loki_request_duration_seconds_bucket:sum_rate
      #       expr: sum(rate(loki_request_duration_seconds_bucket[1m])) by (le, job)
      #     - record: job_route:loki_request_duration_seconds_bucket:sum_rate
      #       expr: sum(rate(loki_request_duration_seconds_bucket[1m])) by (le, job, route)
      #     - record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate
      #       expr: sum(rate(container_cpu_usage_seconds_total[1m])) by (node, namespace, pod, container)

  lokiCanary:
    enabled: false

  write:
    replicas: 2 #3
    resources:
      limits:
        cpu: 2
        memory: 2Gi
        ephemeral-storage: 1Gi
      requests:
        cpu: 50m
        memory: 256Mi
        ephemeral-storage: 100Mi
    persistence:
      size: 30Gi
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 90
            preference:
              matchExpressions:
                - key: mon
                  operator: In
                  values:
                    - "true"
          - weight: 10
            preference:
              matchExpressions:
                - key: tools
                  operator: In
                  values:
                    - "true"
    tolerations:
      - key: "mon"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      - key: "tools"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
  read:
    replicas: 1 #2
    resources:
      limits:
        cpu: 2
        memory: 2Gi
        ephemeral-storage: 1Gi
      requests:
        cpu: 50m
        memory: 256Mi
        ephemeral-storage: 100Mi
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 90
            preference:
              matchExpressions:
                - key: mon
                  operator: In
                  values:
                    - "true"
          - weight: 10
            preference:
              matchExpressions:
                - key: tools
                  operator: In
                  values:
                    - "true"
    tolerations:
      - key: "mon"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      - key: "tools"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
    autoscaling:
      enabled: true
      minReplicas: 2 #2
      maxReplicas: 3
      targetCPUUtilizationPercentage: 60
      targetMemoryUtilizationPercentage:
    persistence:
      size: 30Gi

  gateway:
    enabled: true
    verboseLogging: true
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 90
            preference:
              matchExpressions:
                - key: mon
                  operator: In
                  values:
                    - "true"
          - weight: 10
            preference:
              matchExpressions:
                - key: tools
                  operator: In
                  values:
                    - "true"
    tolerations:
      - key: "mon"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      - key: "tools"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
    resources:
      limits:
        cpu: 1
        memory: 1Gi
        ephemeral-storage: 1Gi
      requests:
        cpu: 10m
        memory: 128Mi
        ephemeral-storage: 100Mi
    autoscaling:
      enabled: true
      minReplicas: 2 #2
      maxReplicas: 3
      targetCPUUtilizationPercentage: 60
      targetMemoryUtilizationPercentage:
  monitoring:
    selfMonitoring:
      enabled: false
      grafanaAgent:
        installOperator: false
        enableConfigReadAPI: false
    dashboards:
      enabled: false
      labels:
        grafana_dashboard: "1"
    serviceMonitor:
      enabled: true
      metricsInstance:
        enabled: false

  backend:
    replicas: 2
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 90
            preference:
              matchExpressions:
                - key: mon
                  operator: In
                  values:
                    - "true"
          - weight: 10
            preference:
              matchExpressions:
                - key: tools
                  operator: In
                  values:
                    - "true"
    tolerations:
      - key: "mon"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      - key: "tools"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
    resources:
      limits:
        cpu: 2
        memory: 2Gi
        ephemeral-storage: 1Gi
      requests:
        cpu: 50m
        memory: 256Mi
        ephemeral-storage: 100Mi
    autoscaling:
      enabled: true
      minReplicas: 2
      maxReplicas: 3
      targetCPUUtilizationPercentage: 60
