{{- if .Values.global.createProxyRepos }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-add-proxy
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    kube-score/ignore: pod-networkpolicy
spec:
  activeDeadlineSeconds: 900
  parallelism: 1
  completions: 1
  template:
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 90
            preference:
              matchExpressions:
              - key: tools
                operator: In
                values:
                - "true"
      tolerations:
        - key: "tools"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      containers:
      - name: kubectl
        image: {{ .Values.job.image }}:{{ .Values.job.tag }}
        envFrom:
        - secretRef:
            name: {{ .Release.Name }}-core
        resources:
          limits:
            cpu: 1000m
            memory: 256Mi
            ephemeral-storage: 20Mi
          requests:
            cpu: 5m
            memory: 32Mi
            ephemeral-storage: 2Mi
        command:
        - /bin/bash
        - -c
        - |
          curl "http://{{ .Release.Name }}-core/api/v2.0/registries" \
            -H 'Content-Type: application/json' \
            -H 'Accept: application/json' \
            -H "Origin: http://{{ .Release.Name }}-core" \
            -H 'Sec-Fetch-Site: same-origin' \
            -H 'Sec-Fetch-Mode: cors' \
            -H 'Sec-Fetch-Dest: empty' \
            -H 'Accept-Language: en-US,en;q=0.9,et-EE;q=0.8,et;q=0.7' \
            -u "admin:$HARBOR_ADMIN_PASSWORD" \
            --data-raw '{"credential":{"access_key":"","access_secret":"","type":"basic"},"description":"","insecure":false,"name":"hub","type":"docker-hub","url":"https://hub.docker.com"}' \
            --compressed
            
          curl "http://{{ .Release.Name }}-core/api/v2.0/registries" \
            -H 'Content-Type: application/json' \
            -H 'Accept: application/json' \
            -H "Origin: http://{{ .Release.Name }}-core" \
            -H 'Sec-Fetch-Site: same-origin' \
            -H 'Sec-Fetch-Mode: cors' \
            -H 'Sec-Fetch-Dest: empty' \
            -H 'Accept-Language: en-US,en;q=0.9,et-EE;q=0.8,et;q=0.7' \
            -u "admin:$HARBOR_ADMIN_PASSWORD" \
            --data-raw '{"credential":{"access_key":"","access_secret":"","type":"basic"},"description":"","insecure":false,"name":"ghcr","type":"github-ghcr","url":"https://ghcr.io"}' \
            --compressed
            
          curl "http://{{ .Release.Name }}-core/api/v2.0/registries" \
            -H 'Content-Type: application/json' \
            -H 'Accept: application/json' \
            -H "Origin: http://{{ .Release.Name }}-core" \
            -H 'Sec-Fetch-Site: same-origin' \
            -H 'Sec-Fetch-Mode: cors' \
            -H 'Sec-Fetch-Dest: empty' \
            -H 'Accept-Language: en-US,en;q=0.9,et-EE;q=0.8,et;q=0.7' \
            -u "admin:$HARBOR_ADMIN_PASSWORD" \
            --data-raw '{"credential":{"access_key":"","access_secret":"","type":"basic"},"description":"","insecure":false,"name":"gcr","type":"docker-registry","url":"https://gcr.io"}' \
            --compressed
            
          curl "http://{{ .Release.Name }}-core/api/v2.0/registries" \
            -H 'Content-Type: application/json' \
            -H 'Accept: application/json' \
            -H "Origin: http://{{ .Release.Name }}-core" \
            -H 'Sec-Fetch-Site: same-origin' \
            -H 'Sec-Fetch-Mode: cors' \
            -H 'Sec-Fetch-Dest: empty' \
            -H 'Accept-Language: en-US,en;q=0.9,et-EE;q=0.8,et;q=0.7' \
            -u "admin:$HARBOR_ADMIN_PASSWORD" \
            --data-raw '{"credential":{"access_key":"","access_secret":"","type":"basic"},"description":"","insecure":false,"name":"k8s","type":"docker-registry","url":"https://registry.k8s.io"}' \
            --compressed

          k8sid=`curl -X 'GET' 'http://{{ .Release.Name }}-core/api/v2.0/registries?page=1&page_size=10' -H 'accept: application/json' -u "admin:$HARBOR_ADMIN_PASSWORD" | jq '.[] | select(.name == "k8s").id'`
          if [ "$k8sid" != "" ]
          then
            curl "http://{{ .Release.Name }}-core/api/v2.0/projects" \
              -H 'Content-Type: application/json' \
              -H 'Accept: application/json' \
              -H "Origin: http://{{ .Release.Name }}-core" \
              -H 'Sec-Fetch-Site: same-origin' \
              -H 'Sec-Fetch-Mode: cors' \
              -H 'Sec-Fetch-Dest: empty' \
              -H 'Accept-Language: en-US,en;q=0.9,et-EE;q=0.8,et;q=0.7' \
              -u "admin:$HARBOR_ADMIN_PASSWORD" \
              --data-raw "{\"project_name\":\"k8s\",\"registry_id\":$k8sid,\"metadata\":{\"public\":\"true\"},\"storage_limit\":-1}" \
              --compressed
          else
            echo "Unable to get ID of registry.k8s.io"
            exit 1
          fi
          
          gcrid=`curl -X 'GET' 'http://{{ .Release.Name }}-core/api/v2.0/registries?page=1&page_size=10' -H 'accept: application/json' -u "admin:$HARBOR_ADMIN_PASSWORD" | jq '.[] | select(.name == "gcr").id'`
          if [ "$gcrid" != "" ]
          then
            curl "http://{{ .Release.Name }}-core/api/v2.0/projects" \
              -H 'Content-Type: application/json' \
              -H 'Accept: application/json' \
              -H "Origin: http://{{ .Release.Name }}-core" \
              -H 'Sec-Fetch-Site: same-origin' \
              -H 'Sec-Fetch-Mode: cors' \
              -H 'Sec-Fetch-Dest: empty' \
              -H 'Accept-Language: en-US,en;q=0.9,et-EE;q=0.8,et;q=0.7' \
              -u "admin:$HARBOR_ADMIN_PASSWORD" \
              --data-raw "{\"project_name\":\"gcr\",\"registry_id\":$gcrid,\"metadata\":{\"public\":\"true\"},\"storage_limit\":-1}" \
              --compressed
          else
            echo "Unable to get ID of gcr.io"
            exit 1
          fi
          
          ghcrid=`curl -X 'GET' 'http://{{ .Release.Name }}-core/api/v2.0/registries?page=1&page_size=10' -H 'accept: application/json' -u "admin:$HARBOR_ADMIN_PASSWORD" | jq '.[] | select(.name == "ghcr").id'`
          if [ "$ghcrid" != "" ]
          then
            curl "http://{{ .Release.Name }}-core/api/v2.0/projects" \
              -H 'Content-Type: application/json' \
              -H 'Accept: application/json' \
              -H "Origin: http://{{ .Release.Name }}-core" \
              -H 'Sec-Fetch-Site: same-origin' \
              -H 'Sec-Fetch-Mode: cors' \
              -H 'Sec-Fetch-Dest: empty' \
              -H 'Accept-Language: en-US,en;q=0.9,et-EE;q=0.8,et;q=0.7' \
              -u "admin:$HARBOR_ADMIN_PASSWORD" \
              --data-raw "{\"project_name\":\"ghcr\",\"registry_id\":$ghcrid,\"metadata\":{\"public\":\"true\"},\"storage_limit\":-1}" \
              --compressed
          else
            echo "Unable to get ID of ghcr.io"
            exit 1
          fi
          
          hubid=`curl -X 'GET' 'http://{{ .Release.Name }}-core/api/v2.0/registries?page=1&page_size=10' -H 'accept: application/json' -u "admin:$HARBOR_ADMIN_PASSWORD" | jq '.[] | select(.name == "hub").id'`
          if [ "$hubid" != "" ]
          then
            curl "http://{{ .Release.Name }}-core/api/v2.0/projects" \
              -H 'Content-Type: application/json' \
              -H 'Accept: application/json' \
              -H "Origin: http://{{ .Release.Name }}-core" \
              -H 'Sec-Fetch-Site: same-origin' \
              -H 'Sec-Fetch-Mode: cors' \
              -H 'Sec-Fetch-Dest: empty' \
              -H 'Accept-Language: en-US,en;q=0.9,et-EE;q=0.8,et;q=0.7' \
              -u "admin:$HARBOR_ADMIN_PASSWORD" \
              --data-raw "{\"project_name\":\"hub\",\"registry_id\":$hubid,\"metadata\":{\"public\":\"true\"},\"storage_limit\":-1}" \
              --compressed
          else
            echo "Unable to get ID of hub.docker.com"
            exit 1
          fi
        
      restartPolicy: Never
  backoffLimit: 10
{{- end }}
