global:
  cloudProvider: ""
  providerConfigRefName: ""
  prefix: ""
  datasources:
    loki:
      hostname: ""
    prometheus:
      hostname: ""

grafana:
  enabled: true
  fullnameOverride: "grafana"

  annotations:
    kube-score/ignore: pod-networkpolicy,pod-probes

  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: "kubernetes"
          orgId: 1
          folder: "Kubernetes"
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/kubernetes
        - name: "loki"
          orgId: 1
          folder: "Loki"
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/loki

  dashboardsConfigMaps:
    loki: grafana-dashboards-loki

  datasources: {}

  dashboards:
    kubernetes:
      global:
        gnetId: 15757
        revision: 42
        datasource: Prometheus
      namespaces:
        gnetId: 15758
        revision: 40
        datasource: Prometheus
      nodes:
        gnetId: 15759
        revision: 32
        datasource: Prometheus
      pods:
        gnetId: 15760
        revision: 32
        datasource: Prometheus
      apiserver:
        gnetId: 15761
        revision: 18
        datasource: Prometheus
      prometheus:
        gnetId: 19105
        revision: 5
        datasource: Prometheus

  deploymentStrategy:
    type: Recreate

  rbac:
    create: true
    namespaced: true

  downloadDashboards:
    resources:
      limits:
        cpu: 1000m
        memory: 512Mi
        ephemeral-storage: 10Gi
      requests:
        cpu: 10m
        memory: 64Mi
        ephemeral-storage: 1Gi

  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
      ephemeral-storage: 10Gi
    requests:
      cpu: 10m
      memory: 64Mi
      ephemeral-storage: 1Gi
  networkPolicy:
    enabled: false
    ingress: true
    allowExternal: true
    egress:
      enabled: false

  serviceAccount:
    create: false
    name: grafana

  persistence:
    enabled: true
    size: 2Gi

  service:
    type: ClusterIP
  serviceMonitor:
    enabled: false
  testFramework:
    enabled: false
  grafana.ini:
    default:
      instance_name: Grafana
    server:
      root_url: "https://"

  #      auth.basic:
  #        enabled: true

  sidecar:
    resources:
      limits:
        cpu: 1000m
        memory: 512Mi
        ephemeral-storage: 10Gi
      requests:
        cpu: 10m
        memory: 32Mi
        ephemeral-storage: 1Gi
    alerts:
      enabled: true
    dashboards:
      enabled: true
    datasources:
      enabled: true

  initChownData:
    resources:
      limits:
        cpu: 1000m
        memory: 512Mi
        ephemeral-storage: 10Gi
      requests:
        cpu: 10m
        memory: 32Mi
        ephemeral-storage: 1Gi

  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 90
          preference:
            matchExpressions:
              - key: mon
                operator: In
                values:
                  - "true"
        - weight: 10
          preference:
            matchExpressions:
              - key: tools
                operator: In
                values:
                  - "true"
  tolerations:
    - key: "mon"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"
    - key: "tools"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"
