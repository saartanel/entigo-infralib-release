 
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-delete-gp2
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
    helm.sh/hook: pre-install
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Name }}-delete-gp2
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
    helm.sh/hook: pre-install
rules:
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["list", "get", "delete", "create", "update"]
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-delete-gp2
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
    helm.sh/hook: pre-install
subjects:
- kind: ServiceAccount
  name: {{ .Release.Name }}-delete-gp2
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ .Release.Name }}-delete-gp2
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-delete-gp2
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    helm.sh/hook: post-install
    kube-score/ignore: pod-networkpolicy
spec:
  activeDeadlineSeconds: 600
  parallelism: 1
  completions: 1
  template:
    spec:
      serviceAccountName: {{ .Release.Name }}-delete-gp2
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 90
            preference:
              matchExpressions:
              - key: tools
                operator: In
                values:
                - "true"
      tolerations:
        - key: "tools"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"

      containers:
      - name: kubectl
        image: {{ .Values.job.image }}:{{ .Values.job.tag }}
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
            ephemeral-storage: 200Mi
          requests:
            cpu: 1m
            memory: 16Mi
            ephemeral-storage: 20Mi
        command:
        - /bin/bash
        - -c
        - if [ "$(kubectl get pv | wc -l)" == "0" ]; then if [ "$(kubectl get sc {{ .Values.global.sc_prefix }}gp2 | grep 'kubernetes.io/aws-ebs' | wc -l)" == "1" ]; then kubectl delete sc gp2 && kubectl get sc {{ .Values.global.sc_prefix }}gp2-retain -o json | jq '.metadata.name = "{{ .Values.global.sc_prefix }}gp2"' | jq 'del(.metadata.labels."argocd.argoproj.io/instance")' | kubectl apply -f -; fi; fi
      restartPolicy: Never
  backoffLimit: 3

